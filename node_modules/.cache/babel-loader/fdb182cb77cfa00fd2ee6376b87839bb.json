{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\FoodApp\\\\FoodApp\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport CartContext from \"../../store/cart-context\";\nimport { useContext } from \"react\";\nimport classes from \"./Cart.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.addItem;\n  };\n\n  const cartItemAddHandler = item => {};\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => {\n      return /*#__PURE__*/_jsxDEV(CartItem, {\n        name: item.name,\n        amount: item.amount,\n        price: item.price //prekonfigurujemy metode ktora bedzie wywolana z argumentem item.id / item\n        ,\n        onRemove: cartItemRemoveHandler.bind(null, item.id),\n        onAdd: cartItemAddHandler.bind(null, item)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this); //   const cartItems = (\n  //     <ul className={classes[\"cart-items\"]}>\n  //       {[{ id: \"c1\", name: \"Sushi\", amount: 2, price: 12.99 }].map((item) => (\n  //         <li>{item.name}</li>\n  //       ))}\n  //     </ul>\n  //   );\n\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Kwota zam\\xF3wienia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[\"button--alt\"],\n        onClick: props.onClose,\n        children: \"Zamknij\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        children: \"Zam\\xF3w\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/user/Desktop/React/FoodApp/FoodApp/src/components/Cart/Cart.js"],"names":["Modal","CartItem","CartContext","useContext","classes","Cart","props","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","addItem","cartItemAddHandler","item","cartItems","map","name","amount","price","bind","onClose","total","actions","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,OAAO,GAAGJ,UAAU,CAACD,WAAD,CAA1B;AAEA,QAAMM,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,QAAMC,qBAAqB,GAAIC,EAAD,IAAQ;AACpCP,IAAAA,OAAO,CAACQ,OAAR;AACD,GAFD;;AAGA,QAAMC,kBAAkB,GAAIC,IAAD,IAAU,CAAE,CAAvC;;AAEA,QAAMC,SAAS,gBACb;AAAI,IAAA,SAAS,EAAEd,OAAO,CAAC,YAAD,CAAtB;AAAA,cACGG,OAAO,CAACI,KAAR,CAAcQ,GAAd,CAAmBF,IAAD,IAAU;AAC3B,0BACE,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,IAAI,CAACG,IAFb;AAGE,QAAA,MAAM,EAAEH,IAAI,CAACI,MAHf;AAIE,QAAA,KAAK,EAAEJ,IAAI,CAACK,KAJd,CAKE;AALF;AAME,QAAA,QAAQ,EAAET,qBAAqB,CAACU,IAAtB,CAA2B,IAA3B,EAAiCN,IAAI,CAACH,EAAtC,CANZ;AAOE,QAAA,KAAK,EAAEE,kBAAkB,CAACO,IAAnB,CAAwB,IAAxB,EAA8BN,IAA9B;AAPT,SACOA,IAAI,CAACH,EADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZA;AADH;AAAA;AAAA;AAAA;AAAA,UADF,CAXsB,CA6BtB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAER,KAAK,CAACkB,OAAtB;AAAA,eACGN,SADH,eAEE;AAAK,MAAA,SAAS,EAAEd,OAAO,CAACqB,KAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOjB;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACsB,OAAxB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAEtB,OAAO,CAAC,aAAD,CAA1B;AAA2C,QAAA,OAAO,EAAEE,KAAK,CAACkB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGd,QAAQ,iBAAI;AAAQ,QAAA,SAAS,EAAEN,OAAO,CAACuB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJf;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApDD;;GAAMtB,I;;KAAAA,I;AAsDN,eAAeA,IAAf","sourcesContent":["import Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport { useContext } from \"react\";\r\n\r\nimport classes from \"./Cart.module.css\";\r\n\r\nconst Cart = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.addItem;\r\n  };\r\n  const cartItemAddHandler = (item) => {};\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => {\r\n        return (\r\n          <CartItem\r\n            key={item.id}\r\n            name={item.name}\r\n            amount={item.amount}\r\n            price={item.price}\r\n            //prekonfigurujemy metode ktora bedzie wywolana z argumentem item.id / item\r\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n            onAdd={cartItemAddHandler.bind(null, item)}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n\r\n  //   const cartItems = (\r\n  //     <ul className={classes[\"cart-items\"]}>\r\n  //       {[{ id: \"c1\", name: \"Sushi\", amount: 2, price: 12.99 }].map((item) => (\r\n  //         <li>{item.name}</li>\r\n  //       ))}\r\n  //     </ul>\r\n  //   );\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Kwota zamówienia</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n          Zamknij\r\n        </button>\r\n        {hasItems && <button className={classes.button}>Zamów</button>}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}