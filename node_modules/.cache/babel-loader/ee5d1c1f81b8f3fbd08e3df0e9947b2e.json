{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\FoodApp\\\\FoodApp\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport Card from \"../UI/Cards\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\"; //Zamieniamy dummy tablice na dance przechowane w Firebase\n// const DUMMY_MEALS = [\n//   {\n//     id: \"m1\",\n//     name: \"Sushi\",\n//     description: \"Ryba najwyższej jakości\",\n//     price: 22.99,\n//   },\n//   {\n//     id: \"m2\",\n//     name: \"Schnitzel\",\n//     description: \"Niemiecki specjał\",\n//     price: 16.5,\n//   },\n//   {\n//     id: \"m3\",\n//     name: \"Burger Barbecue\",\n//     description: \"Wołowy burger z sosem BBQ\",\n//     price: 12.99,\n//   },\n//   {\n//     id: \"m4\",\n//     name: \"Zielona miska\",\n//     description: \"Świeże warzywa - samo zdrowie\",\n//     price: 18.99,\n//   },\n// ];\n//nie powinnismy uzywac funkcji asynchronicznej jako argumentu useEffect (zwracamy cleanup function, ktora musi byc synchroniczna), zamiast tego tworzymy asynchroniczna funkcje wewnatrz tej funckji i ja wywolujemy linijke nizej\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\"https://test1-76ad3-default-rtdb.firebaseio.com/meals.json\");\n      const data = response.json();\n    };\n  }, []);\n  const mealsList = DUMMY_MEALS.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/user/Desktop/React/FoodApp/FoodApp/src/components/Meals/AvailableMeals.js"],"names":["useEffect","Card","MealItem","classes","AvailableMeals","fetchMeals","response","fetch","data","json","mealsList","DUMMY_MEALS","map","meal","id","name","description","price","meals"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAOC,OAAP,MAAoB,6BAApB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3BJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4DAD0B,CAA5B;AAGA,YAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAT,EAAb;AACD,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,QAAMC,SAAS,GAAGC,WAAW,CAACC,GAAZ,CAAiBC,IAAD,iBAChC,QAAC,QAAD;AACE,IAAA,EAAE,EAAEA,IAAI,CAACC,EADX;AAGE,IAAA,IAAI,EAAED,IAAI,CAACE,IAHb;AAIE,IAAA,WAAW,EAAEF,IAAI,CAACG,WAJpB;AAKE,IAAA,KAAK,EAAEH,IAAI,CAACI;AALd,KAEOJ,IAAI,CAACC,EAFZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEX,OAAO,CAACe,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3BD;;GAAMN,c;;KAAAA,c;AA6BN,eAAeA,cAAf","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nimport Card from \"../UI/Cards\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\nimport classes from \"./AvailableMeals.module.css\";\r\n//Zamieniamy dummy tablice na dance przechowane w Firebase\r\n// const DUMMY_MEALS = [\r\n//   {\r\n//     id: \"m1\",\r\n//     name: \"Sushi\",\r\n//     description: \"Ryba najwyższej jakości\",\r\n//     price: 22.99,\r\n//   },\r\n//   {\r\n//     id: \"m2\",\r\n//     name: \"Schnitzel\",\r\n//     description: \"Niemiecki specjał\",\r\n//     price: 16.5,\r\n//   },\r\n//   {\r\n//     id: \"m3\",\r\n//     name: \"Burger Barbecue\",\r\n//     description: \"Wołowy burger z sosem BBQ\",\r\n//     price: 12.99,\r\n//   },\r\n//   {\r\n//     id: \"m4\",\r\n//     name: \"Zielona miska\",\r\n//     description: \"Świeże warzywa - samo zdrowie\",\r\n//     price: 18.99,\r\n//   },\r\n// ];\r\n\r\n//nie powinnismy uzywac funkcji asynchronicznej jako argumentu useEffect (zwracamy cleanup function, ktora musi byc synchroniczna), zamiast tego tworzymy asynchroniczna funkcje wewnatrz tej funckji i ja wywolujemy linijke nizej\r\nconst AvailableMeals = () => {\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const response = await fetch(\r\n        \"https://test1-76ad3-default-rtdb.firebaseio.com/meals.json\"\r\n      );\r\n      const data = response.json();\r\n    };\r\n  }, []);\r\n\r\n  const mealsList = DUMMY_MEALS.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}